<?php


use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;
use Illuminate\Support\Facades\Config;

return new class extends Migration
{
    public function up()
    {

        $tableNames = Config::get('multi-tenancy.table_names');
        $columnNames = Config::get('multi-tenancy.column_names');

        if (empty($tableNames)) {
            throw new \Exception('Error: config/multi-tenancy.php not loaded. Run [php artisan config:clear] and try again.');
        }

        Schema::create($tableNames['tenants'], function (Blueprint $table) use ($columnNames) {
            $table->id();
            $table->string('name');
            $table->string('slug')->unique();
            $table->string('email');
            $table->string('phone')->nullable();
            $table->string('website')->nullable();
            $table->text('address')->nullable();
            $table->string('logo')->nullable();
            $table->string('timezone')->default('Asia/Jakarta');
            $table->json('settings')->nullable();
            $table->string('plan')->nullable();
            $table->timestamp('trial_ends_at')->nullable();
            $table->boolean('is_active')->default(true);
            $table->foreignId($columnNames['user_foreign_key'])->constrained('users')->cascadeOnDelete();
            $table->timestamps();
        });

        Schema::create($tableNames['tenant_user'], function (Blueprint $table) use ($columnNames, $tableNames) {
            $table->id();
            $table->foreignId($columnNames['tenant_foreign_key'])->constrained($tableNames['tenants'])->onDelete('cascade');
            $table->foreignId($columnNames['user_foreign_key'])->constrained('users')->cascadeOnDelete();
            $table->timestamps();
        });

        Schema::create($tableNames['tenant_invitations'], function (Blueprint $table) use ($columnNames, $tableNames) {
            $table->id();
            $table->foreignId($columnNames['tenant_foreign_key'])->constrained($tableNames['tenants'])->onDelete('cascade');
            $table->string('email');
            $table->string('role')->default('member');
            $table->string('token', 64)->unique();
            $table->timestamp('expires_at');
            $table->foreignId('invited_by')->constrained('users')->cascadeOnDelete();
            $table->timestamp('accepted_at')->nullable();
            $table->timestamps();
        });
    }

    public function down()
    {
        $tableNames = Config::get('multi-tenancy.table_names');

        if (empty($tableNames)) {
            throw new \Exception('Error: config/multi-tenancy.php not found and defaults could not be merged. Please publish the package configuration before proceeding, or drop the tables manually.');
        }

        Schema::dropIfExists($tableNames['tenant_invitations']);
        Schema::dropIfExists($tableNames['tenant_user']);
        Schema::dropIfExists($tableNames['tenants']);
    }
};
